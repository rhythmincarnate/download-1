
指针
	变量的类型---->存地址

	意义:
		改变实参
		值的回填
	定义
		type name;
		type--->存储的地址类型
		int类型变量的地址类型就是int *
		int *p;
		p指针变量 int *是变量p的类型

	字节宽度
		与类型无关
		64位os--->指针变量就是64位8字节
	指针的类型
		决定了寻址能力
		int *类型的指针 *取得sizeof(int)
		char *类型的指针 *取得sizeof(char)

		决定了步长
		int *类型的指针 +1 sizeof(int)
		char *类型的指针 +1 sizeof(char)

	防止使用野指针
		未初始化的局部指针变量, 随机值	
		不能直接*运算
		操作野指针--->段错误
		
	void *:
		任意类型指针--->能够存储任意类型地址
		没有*运算
		也没有步长 不能加减
	NULL--->宏	(void *)0	

	常量指针/指针常量:
		const
	* 和 ++同时作用于指针
		*p++
		*(p++)
		(*p)++
		++*p
		*++p

	typedef关键字 与 #define 区别

一级指针

动态开辟
	堆:可供用户随时分配/释放
	定义的一个函数,地址是否可以返回?
		static 
		堆空间
	malloc(3)
	calloc(3)
	realloc(3)
	free(3)

	memcpy(3) / memmove(3)
	memset(3) / bzero(3);
	memset(s, '\0', size)=====>bzero(s, size)

多级指针
	存储指针变量的地址

指针数组
	主要用于存储多个字符串(命令行参数)	

数组指针

函数指针




